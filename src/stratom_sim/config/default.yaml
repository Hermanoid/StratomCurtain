converter_costmap:
  converter_costmap:
    ros__parameters:
      use_sim_time: True
      update_frequency: 10.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 40
      height: 40
      resolution: 0.125
      robot_radius: 0.22
      plugins: ["obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan #/front_velodyne
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          inf_is_valid: True
          data_type: "LaserScan"
          raytrace_max_range: 25.0
          raytrace_min_range: 0.04
          obstacle_max_range: 20.0
          obstacle_min_range: 0.04
      # static_layer:
      #   plugin: "nav2_costmap_2d::StaticLayer"
      #   map_subscribe_transient_local: True
      always_send_full_costmap: True

costmap_converter:
  # intra_node:
  #   ros__parameters:
  #     min_distance_between_blobs: 100
  #     alpha_slow: 0.1
  #     alpha_fast: 0.6
  costmap_converter:
    ros__parameters:
      use_sim_time: True
      converter_plugin: costmap_converter::CostmapToPolygonsDBSMCCH
      cluster_max_pts: 150
      cluster_mind_pts: 5
      cluster_max_distance: 0.5
      convex_hull_min_pt_separation: 0.05

py_tracker:
  ros__parameters:
    use_sim_time: True
    # Once a target is deemed dynamic, how long can it remain static before we switch it back that classification?
    dynamic_memory_time: 10.0
    # How fast must an object move to be considered dynamic? This filter is in m/s
    dynamic_movement_speed: 0.1
    # This parameter controls the rolling velocity average. Lower values: more averaging
    # According to the equation (each frame) avg_velocity = (1 - rate) * avg_velocity + rate * current_velocity
    velocity_update_rate: 0.05
    # How long must an object sustain movement before it is classified as dynamic? In seconds
    dynamic_time_threshold: 0.75
    # How many frames can an object be out-of-view before we drop our track of it?
    max_disappeared_frames: 10
    # Period (in seconds) to publish the safety curtain polygon for viewing in RViz
    curtain_publish_period: 1.0
    # Polygon defining the boundary of the detection curtain
    # ROS2 is admittedly pretty dumb with array parameters, so this needs to be a 1D array
    # Every other number is x, then y, for each point: (x1, y1, x2, y2, ...)
    curtain_boundary: [-5.0, -5.0, -5.0, 5.0, 5.0, 5.0, 5.0, -5.0]
    # Names for publisher/subscriber topics
    obstacles_sub_topic: costmap_obstacles
    marker_pub_topic: dynamic_marker
    marker_pub_enabled: True
    curtain_pub_topic: curtain
    curtain_pub_enabled: True
    warnings_pub_topic: warnings
    warnings_pub_enabled: True
    viz_enabled: False
    # TF Frames
    base_frame: base_link
    map_frame: odom
